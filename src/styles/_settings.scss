//font type
@import url("https://fonts.googleapis.com/css2?family=Sofia+Sans:wght@200;400&display=swap");
$sofia-sans: "Sofia Sans", sans-serif;

//main color
$main-theme-color: #202e3b;
$light-theme-bg-color: #eaeaea;
$light-theme-bg-color--header: #eaeaead1;
$light-theme-text-color: #202e3b;
$dark-theme-bg-color: #202e3b;
$dark-theme-bg-color--header: #202e3bd1;
$dark-theme-text-color: #eaeaea;

//title font size
$title-xl: 6em;
$title-lg: 4em;
$title-md: 3em;
$title-sm: 2em;

//font-weight
$font-xh: 600;
$font-h: 400;
$font-l: 200;

//scrollbar thumb
$light-theme-scroll-thumb: #202e3b;
$dark-theme-scroll-thumb: #eaeaea;

//activation
$unactived-color: #979ca1;
$activated-color: #202e3b;

//media breakpoint
$breakpoints: (
    sm: (
        min: 576px,
        max: 575.98px
    ),
    md: (
        min: 768px,
        max: 767.98px
    ),
    lg: (
        min: 992px,
        max: 991.98px
    ),
    xl: (
        min: 1200px,
        max: 1199.98px
    ),
    xxl: (
        min: 1400px,
        max: 1399.98px
    )
);

$one-eighty-rotate-deg: 180deg;
$zero-rotate-deg: 0deg;

@mixin breakpoint($breakpoint, $direction: min) {
    //check if the supplied breakpoint exists in our breakpoits map
    @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint-values: map-get($breakpoints, $breakpoint);
        $breakpoint-min: map-get($breakpoint-values, min);
        $breakpoint-max: map-get($breakpoint-values, max);

        //check if we are writing styles for larger or smaller screens
        @if $direction == min {
            @media (min-width: $breakpoint-min) {
                @content;
            }
        } @else {
            @media (max-width: $breakpoint-max) {
                @content;
            }
        }

        // use the custom value if the breakpoint is not part of the pre-defined list
    } @else {
        @if $direction == min {
            @media (min-width: $breakpoint) {
                @content;
            }
        } @else {
            @media (max-width: $breakpoint) {
                @content;
            }
        }
    }
}
